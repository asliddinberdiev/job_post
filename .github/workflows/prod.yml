name: CI-prod

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      VPS_HOST: ${{ secrets.VPS_HOST }}
      VPS_USER: ${{ secrets.VPS_USER }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
      TAG: ${{ github.ref_name }}
      ENV_FILE_NAME: ${{ secrets.ENV_FILE_NAME }}
      CONTAINER_NAME: ${{ github.event.repository.name }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        run: echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t "$IMAGE_NAME:$TAG" .
          docker push "$IMAGE_NAME:$TAG"

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.VPS_HOST }}
          username: ${{ env.VPS_USER }}
          key: ${{ env.SSH_KEY }}
          envs: IMAGE_NAME,TAG,ENV_FILE_NAME,CONTAINER_NAME,DOCKERHUB_USERNAME,DOCKERHUB_PASSWORD
          script: |
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
            docker pull "$IMAGE_NAME:$TAG"
            docker stop "$CONTAINER_NAME" || true
            docker rm "$CONTAINER_NAME" || true
            docker rmi "$IMAGE_NAME" || true
            docker network create root_network || true
            docker run -d --name "$CONTAINER_NAME" --network root_network -p 8000:8000 --env-file "$ENV_FILE_NAME" "$IMAGE_NAME:$TAG"
